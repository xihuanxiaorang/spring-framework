<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
	<!--	<bean id="person" class="top.xiaorang.spring.bean.Person" autowire="byType">-->
	<!--		<property name="name" value="小让"/>-->
	<!--	</bean>-->

	<!--	<bean id="cat" class="top.xiaorang.spring.bean.Cat">-->
	<!--		<property name="name" value="小白"/>-->
	<!--	</bean>-->

	<!--	<context:property-placeholder location="classpath:db.properties"/>-->

	<!--	<bean id="connection" class="top.xiaorang.spring.factorybean.ConnectionFactory">-->
	<!--		<property name="driverClassName" value="${jdbc.driverClassName}"/>-->
	<!--		<property name="url" value="${jdbc.url}"/>-->
	<!--		<property name="username" value="${jdbc.username}"/>-->
	<!--		<property name="password" value="${jdbc.password}"/>-->
	<!--	</bean>-->
	<!-- 基于单例setter注入的循环依赖-->
	<bean id="a" class="top.xiaorang.spring.bean.A">
		<property name="b" ref="b"/>
	</bean>

	<bean id="b" class="top.xiaorang.spring.bean.B">
		<property name="a" ref="a"/>
	</bean>
	<!-- 基于构造器参数注入的循环依赖-->
	<!--	<bean id="a" class="top.xiaorang.spring.bean.A">-->
	<!--		<constructor-arg index="0" ref="b"/>-->
	<!--	</bean>-->

	<!--	<bean id="b" class="top.xiaorang.spring.bean.B">-->
	<!--		<constructor-arg index="0" ref="a"/>-->
	<!--	</bean>-->
	<!--基于多例setter注入的循环依赖-->
	<!--	<bean id="a" class="top.xiaorang.spring.bean.A" scope="prototype">-->
	<!--		<property name="b" ref="b"/>-->
	<!--	</bean>-->

	<!--	<bean id="b" class="top.xiaorang.spring.bean.B" scope="prototype">-->
	<!--		<property name="a" ref="a"/>-->
	<!--	</bean>-->

	<bean id="logAspect" class="top.xiaorang.spring.aop.LogInterceptor"/>

	<aop:config>
		<aop:aspect id="logAspect" ref="logAspect">
			<aop:pointcut id="pc" expression="execution(* *(..))"/>
			<aop:before method="beforeMethod" pointcut-ref="pc"/>
			<aop:after-returning method="afterReturning" pointcut-ref="pc" returning="result"/>
			<aop:after method="afterMethod" pointcut-ref="pc"/>
			<aop:after-throwing method="afterThrowing" pointcut-ref="pc" throwing="e"/>
		</aop:aspect>
	</aop:config>
</beans>